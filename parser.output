Rules never reduced

    3 functions: /* empty */


State 0 conflicts: 1 shift/reduce
State 52 conflicts: 13 shift/reduce
State 76 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: functions main

    2 functions: function
    3          | /* empty */

    4 function: FUNC_DECL ID LPAREN RPAREN COLON END

    5 main: FUNC_DECL MAIN vardecls stmts END

    6 vardecls: vardecl SEMI vardecls
    7         | /* empty */

    8 vardecl: type id

    9 type: INT
   10     | BOOL

   11 stmts: stmt SEMI stmts
   12      | stmt SEMI

   13 stmt: assign
   14     | print
   15     | while
   16     | if
   17     | for
   18     | return

   19 assign: id ASSIGN expr

   20 print: PRINT LPAREN id RPAREN

   21 while: WHILE LPAREN expr RPAREN DO stmts END

   22 if: IF LPAREN expr RPAREN DO stmts END
   23   | IF LPAREN expr RPAREN DO stmts ELSE stmts END

   24 for: FOR LPAREN stmt SEMI expr SEMI stmt RPAREN DO stmts END

   25 expr: expr binop expr
   26     | NOTOP expr
   27     | id LPAREN args RPAREN
   28     | id
   29     | const
   30     | LPAREN expr RPAREN

   31 args: someArgs
   32     | /* empty */

   33 someArgs: expr moreArgs

   34 moreArgs: COMMA someArgs
   35         | /* empty */

   36 return: RETURN expr

   37 id: ID

   38 const: ICONST
   39      | BCONST

   40 binop: ADDOP
   41      | SUBOP
   42      | MULOP
   43      | DIVOP
   44      | AND
   45      | OR
   46      | XOR
   47      | NOT_EQ
   48      | EQ
   49      | LT
   50      | GT
   51      | LEQ
   52      | GEQ


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 4 37
ICONST (259) 38
BCONST (260) 39
INT (261) 9
BOOL (262) 10
MAIN (263) 5
NOTOP (264) 26
ADDOP (265) 40
SUBOP (266) 41
MULOP (267) 42
DIVOP (268) 43
LPAREN (269) 4 20 21 22 23 24 27 30
RPAREN (270) 4 20 21 22 23 24 27 30
ASSIGN (271) 19
SEMI (272) 6 11 12 24
COLON (273) 4
FUNC_DECL (274) 4 5
END (275) 4 5 21 22 23 24
PRINT (276) 20
COMMA (277) 34
RETURN (278) 36
FOR (279) 24
WHILE (280) 21
IF (281) 22 23
ELSE (282) 23
DO (283) 21 22 23 24
AND (284) 44
OR (285) 45
XOR (286) 46
NOT_EQ (287) 47
EQ (288) 48
LT (289) 49
GT (290) 50
LEQ (291) 51
GEQ (292) 52


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1, on right: 0
functions (40)
    on left: 2 3, on right: 1
function (41)
    on left: 4, on right: 2
main (42)
    on left: 5, on right: 1
vardecls (43)
    on left: 6 7, on right: 5 6
vardecl (44)
    on left: 8, on right: 6
type (45)
    on left: 9 10, on right: 8
stmts (46)
    on left: 11 12, on right: 5 11 21 22 23 24
stmt (47)
    on left: 13 14 15 16 17 18, on right: 11 12 24
assign (48)
    on left: 19, on right: 13
print (49)
    on left: 20, on right: 14
while (50)
    on left: 21, on right: 15
if (51)
    on left: 22 23, on right: 16
for (52)
    on left: 24, on right: 17
expr (53)
    on left: 25 26 27 28 29 30, on right: 19 21 22 23 24 25 26 30 33
    36
args (54)
    on left: 31 32, on right: 27
someArgs (55)
    on left: 33, on right: 31 34
moreArgs (56)
    on left: 34 35, on right: 33
return (57)
    on left: 36, on right: 18
id (58)
    on left: 37, on right: 8 19 20 27 28
const (59)
    on left: 38 39, on right: 29
binop (60)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51 52,
    on right: 25


state 0

    0 $accept: . program $end

    FUNC_DECL  shift, and go to state 1

    FUNC_DECL  [reduce using rule 3 (functions)]

    program    go to state 2
    functions  go to state 3
    function   go to state 4


state 1

    4 function: FUNC_DECL . ID LPAREN RPAREN COLON END

    ID  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: functions . main

    FUNC_DECL  shift, and go to state 7

    main  go to state 8


state 4

    2 functions: function .

    $default  reduce using rule 2 (functions)


state 5

    4 function: FUNC_DECL ID . LPAREN RPAREN COLON END

    LPAREN  shift, and go to state 9


state 6

    0 $accept: program $end .

    $default  accept


state 7

    5 main: FUNC_DECL . MAIN vardecls stmts END

    MAIN  shift, and go to state 10


state 8

    1 program: functions main .

    $default  reduce using rule 1 (program)


state 9

    4 function: FUNC_DECL ID LPAREN . RPAREN COLON END

    RPAREN  shift, and go to state 11


state 10

    5 main: FUNC_DECL MAIN . vardecls stmts END

    INT   shift, and go to state 12
    BOOL  shift, and go to state 13

    $default  reduce using rule 7 (vardecls)

    vardecls  go to state 14
    vardecl   go to state 15
    type      go to state 16


state 11

    4 function: FUNC_DECL ID LPAREN RPAREN . COLON END

    COLON  shift, and go to state 17


state 12

    9 type: INT .

    $default  reduce using rule 9 (type)


state 13

   10 type: BOOL .

    $default  reduce using rule 10 (type)


state 14

    5 main: FUNC_DECL MAIN vardecls . stmts END

    ID      shift, and go to state 18
    PRINT   shift, and go to state 19
    RETURN  shift, and go to state 20
    FOR     shift, and go to state 21
    WHILE   shift, and go to state 22
    IF      shift, and go to state 23

    stmts   go to state 24
    stmt    go to state 25
    assign  go to state 26
    print   go to state 27
    while   go to state 28
    if      go to state 29
    for     go to state 30
    return  go to state 31
    id      go to state 32


state 15

    6 vardecls: vardecl . SEMI vardecls

    SEMI  shift, and go to state 33


state 16

    8 vardecl: type . id

    ID  shift, and go to state 18

    id  go to state 34


state 17

    4 function: FUNC_DECL ID LPAREN RPAREN COLON . END

    END  shift, and go to state 35


state 18

   37 id: ID .

    $default  reduce using rule 37 (id)


state 19

   20 print: PRINT . LPAREN id RPAREN

    LPAREN  shift, and go to state 36


state 20

   36 return: RETURN . expr

    ID      shift, and go to state 18
    ICONST  shift, and go to state 37
    BCONST  shift, and go to state 38
    NOTOP   shift, and go to state 39
    LPAREN  shift, and go to state 40

    expr   go to state 41
    id     go to state 42
    const  go to state 43


state 21

   24 for: FOR . LPAREN stmt SEMI expr SEMI stmt RPAREN DO stmts END

    LPAREN  shift, and go to state 44


state 22

   21 while: WHILE . LPAREN expr RPAREN DO stmts END

    LPAREN  shift, and go to state 45


state 23

   22 if: IF . LPAREN expr RPAREN DO stmts END
   23   | IF . LPAREN expr RPAREN DO stmts ELSE stmts END

    LPAREN  shift, and go to state 46


state 24

    5 main: FUNC_DECL MAIN vardecls stmts . END

    END  shift, and go to state 47


state 25

   11 stmts: stmt . SEMI stmts
   12      | stmt . SEMI

    SEMI  shift, and go to state 48


state 26

   13 stmt: assign .

    $default  reduce using rule 13 (stmt)


state 27

   14 stmt: print .

    $default  reduce using rule 14 (stmt)


state 28

   15 stmt: while .

    $default  reduce using rule 15 (stmt)


state 29

   16 stmt: if .

    $default  reduce using rule 16 (stmt)


state 30

   17 stmt: for .

    $default  reduce using rule 17 (stmt)


state 31

   18 stmt: return .

    $default  reduce using rule 18 (stmt)


state 32

   19 assign: id . ASSIGN expr

    ASSIGN  shift, and go to state 49


state 33

    6 vardecls: vardecl SEMI . vardecls

    INT   shift, and go to state 12
    BOOL  shift, and go to state 13

    $default  reduce using rule 7 (vardecls)

    vardecls  go to state 50
    vardecl   go to state 15
    type      go to state 16


state 34

    8 vardecl: type id .

    $default  reduce using rule 8 (vardecl)


state 35

    4 function: FUNC_DECL ID LPAREN RPAREN COLON END .

    $default  reduce using rule 4 (function)


state 36

   20 print: PRINT LPAREN . id RPAREN

    ID  shift, and go to state 18

    id  go to state 51


state 37

   38 const: ICONST .

    $default  reduce using rule 38 (const)


state 38

   39 const: BCONST .

    $default  reduce using rule 39 (const)


state 39

   26 expr: NOTOP . expr

    ID      shift, and go to state 18
    ICONST  shift, and go to state 37
    BCONST  shift, and go to state 38
    NOTOP   shift, and go to state 39
    LPAREN  shift, and go to state 40

    expr   go to state 52
    id     go to state 42
    const  go to state 43


state 40

   30 expr: LPAREN . expr RPAREN

    ID      shift, and go to state 18
    ICONST  shift, and go to state 37
    BCONST  shift, and go to state 38
    NOTOP   shift, and go to state 39
    LPAREN  shift, and go to state 40

    expr   go to state 53
    id     go to state 42
    const  go to state 43


state 41

   25 expr: expr . binop expr
   36 return: RETURN expr .

    ADDOP   shift, and go to state 54
    SUBOP   shift, and go to state 55
    MULOP   shift, and go to state 56
    DIVOP   shift, and go to state 57
    AND     shift, and go to state 58
    OR      shift, and go to state 59
    XOR     shift, and go to state 60
    NOT_EQ  shift, and go to state 61
    EQ      shift, and go to state 62
    LT      shift, and go to state 63
    GT      shift, and go to state 64
    LEQ     shift, and go to state 65
    GEQ     shift, and go to state 66

    $default  reduce using rule 36 (return)

    binop  go to state 67


state 42

   27 expr: id . LPAREN args RPAREN
   28     | id .

    LPAREN  shift, and go to state 68

    $default  reduce using rule 28 (expr)


state 43

   29 expr: const .

    $default  reduce using rule 29 (expr)


state 44

   24 for: FOR LPAREN . stmt SEMI expr SEMI stmt RPAREN DO stmts END

    ID      shift, and go to state 18
    PRINT   shift, and go to state 19
    RETURN  shift, and go to state 20
    FOR     shift, and go to state 21
    WHILE   shift, and go to state 22
    IF      shift, and go to state 23

    stmt    go to state 69
    assign  go to state 26
    print   go to state 27
    while   go to state 28
    if      go to state 29
    for     go to state 30
    return  go to state 31
    id      go to state 32


state 45

   21 while: WHILE LPAREN . expr RPAREN DO stmts END

    ID      shift, and go to state 18
    ICONST  shift, and go to state 37
    BCONST  shift, and go to state 38
    NOTOP   shift, and go to state 39
    LPAREN  shift, and go to state 40

    expr   go to state 70
    id     go to state 42
    const  go to state 43


state 46

   22 if: IF LPAREN . expr RPAREN DO stmts END
   23   | IF LPAREN . expr RPAREN DO stmts ELSE stmts END

    ID      shift, and go to state 18
    ICONST  shift, and go to state 37
    BCONST  shift, and go to state 38
    NOTOP   shift, and go to state 39
    LPAREN  shift, and go to state 40

    expr   go to state 71
    id     go to state 42
    const  go to state 43


state 47

    5 main: FUNC_DECL MAIN vardecls stmts END .

    $default  reduce using rule 5 (main)


state 48

   11 stmts: stmt SEMI . stmts
   12      | stmt SEMI .

    ID      shift, and go to state 18
    PRINT   shift, and go to state 19
    RETURN  shift, and go to state 20
    FOR     shift, and go to state 21
    WHILE   shift, and go to state 22
    IF      shift, and go to state 23

    $default  reduce using rule 12 (stmts)

    stmts   go to state 72
    stmt    go to state 25
    assign  go to state 26
    print   go to state 27
    while   go to state 28
    if      go to state 29
    for     go to state 30
    return  go to state 31
    id      go to state 32


state 49

   19 assign: id ASSIGN . expr

    ID      shift, and go to state 18
    ICONST  shift, and go to state 37
    BCONST  shift, and go to state 38
    NOTOP   shift, and go to state 39
    LPAREN  shift, and go to state 40

    expr   go to state 73
    id     go to state 42
    const  go to state 43


state 50

    6 vardecls: vardecl SEMI vardecls .

    $default  reduce using rule 6 (vardecls)


state 51

   20 print: PRINT LPAREN id . RPAREN

    RPAREN  shift, and go to state 74


state 52

   25 expr: expr . binop expr
   26     | NOTOP expr .

    ADDOP   shift, and go to state 54
    SUBOP   shift, and go to state 55
    MULOP   shift, and go to state 56
    DIVOP   shift, and go to state 57
    AND     shift, and go to state 58
    OR      shift, and go to state 59
    XOR     shift, and go to state 60
    NOT_EQ  shift, and go to state 61
    EQ      shift, and go to state 62
    LT      shift, and go to state 63
    GT      shift, and go to state 64
    LEQ     shift, and go to state 65
    GEQ     shift, and go to state 66

    ADDOP     [reduce using rule 26 (expr)]
    SUBOP     [reduce using rule 26 (expr)]
    MULOP     [reduce using rule 26 (expr)]
    DIVOP     [reduce using rule 26 (expr)]
    AND       [reduce using rule 26 (expr)]
    OR        [reduce using rule 26 (expr)]
    XOR       [reduce using rule 26 (expr)]
    NOT_EQ    [reduce using rule 26 (expr)]
    EQ        [reduce using rule 26 (expr)]
    LT        [reduce using rule 26 (expr)]
    GT        [reduce using rule 26 (expr)]
    LEQ       [reduce using rule 26 (expr)]
    GEQ       [reduce using rule 26 (expr)]
    $default  reduce using rule 26 (expr)

    binop  go to state 67


state 53

   25 expr: expr . binop expr
   30     | LPAREN expr . RPAREN

    ADDOP   shift, and go to state 54
    SUBOP   shift, and go to state 55
    MULOP   shift, and go to state 56
    DIVOP   shift, and go to state 57
    RPAREN  shift, and go to state 75
    AND     shift, and go to state 58
    OR      shift, and go to state 59
    XOR     shift, and go to state 60
    NOT_EQ  shift, and go to state 61
    EQ      shift, and go to state 62
    LT      shift, and go to state 63
    GT      shift, and go to state 64
    LEQ     shift, and go to state 65
    GEQ     shift, and go to state 66

    binop  go to state 67


state 54

   40 binop: ADDOP .

    $default  reduce using rule 40 (binop)


state 55

   41 binop: SUBOP .

    $default  reduce using rule 41 (binop)


state 56

   42 binop: MULOP .

    $default  reduce using rule 42 (binop)


state 57

   43 binop: DIVOP .

    $default  reduce using rule 43 (binop)


state 58

   44 binop: AND .

    $default  reduce using rule 44 (binop)


state 59

   45 binop: OR .

    $default  reduce using rule 45 (binop)


state 60

   46 binop: XOR .

    $default  reduce using rule 46 (binop)


state 61

   47 binop: NOT_EQ .

    $default  reduce using rule 47 (binop)


state 62

   48 binop: EQ .

    $default  reduce using rule 48 (binop)


state 63

   49 binop: LT .

    $default  reduce using rule 49 (binop)


state 64

   50 binop: GT .

    $default  reduce using rule 50 (binop)


state 65

   51 binop: LEQ .

    $default  reduce using rule 51 (binop)


state 66

   52 binop: GEQ .

    $default  reduce using rule 52 (binop)


state 67

   25 expr: expr binop . expr

    ID      shift, and go to state 18
    ICONST  shift, and go to state 37
    BCONST  shift, and go to state 38
    NOTOP   shift, and go to state 39
    LPAREN  shift, and go to state 40

    expr   go to state 76
    id     go to state 42
    const  go to state 43


state 68

   27 expr: id LPAREN . args RPAREN

    ID      shift, and go to state 18
    ICONST  shift, and go to state 37
    BCONST  shift, and go to state 38
    NOTOP   shift, and go to state 39
    LPAREN  shift, and go to state 40

    $default  reduce using rule 32 (args)

    expr      go to state 77
    args      go to state 78
    someArgs  go to state 79
    id        go to state 42
    const     go to state 43


state 69

   24 for: FOR LPAREN stmt . SEMI expr SEMI stmt RPAREN DO stmts END

    SEMI  shift, and go to state 80


state 70

   21 while: WHILE LPAREN expr . RPAREN DO stmts END
   25 expr: expr . binop expr

    ADDOP   shift, and go to state 54
    SUBOP   shift, and go to state 55
    MULOP   shift, and go to state 56
    DIVOP   shift, and go to state 57
    RPAREN  shift, and go to state 81
    AND     shift, and go to state 58
    OR      shift, and go to state 59
    XOR     shift, and go to state 60
    NOT_EQ  shift, and go to state 61
    EQ      shift, and go to state 62
    LT      shift, and go to state 63
    GT      shift, and go to state 64
    LEQ     shift, and go to state 65
    GEQ     shift, and go to state 66

    binop  go to state 67


state 71

   22 if: IF LPAREN expr . RPAREN DO stmts END
   23   | IF LPAREN expr . RPAREN DO stmts ELSE stmts END
   25 expr: expr . binop expr

    ADDOP   shift, and go to state 54
    SUBOP   shift, and go to state 55
    MULOP   shift, and go to state 56
    DIVOP   shift, and go to state 57
    RPAREN  shift, and go to state 82
    AND     shift, and go to state 58
    OR      shift, and go to state 59
    XOR     shift, and go to state 60
    NOT_EQ  shift, and go to state 61
    EQ      shift, and go to state 62
    LT      shift, and go to state 63
    GT      shift, and go to state 64
    LEQ     shift, and go to state 65
    GEQ     shift, and go to state 66

    binop  go to state 67


state 72

   11 stmts: stmt SEMI stmts .

    $default  reduce using rule 11 (stmts)


state 73

   19 assign: id ASSIGN expr .
   25 expr: expr . binop expr

    ADDOP   shift, and go to state 54
    SUBOP   shift, and go to state 55
    MULOP   shift, and go to state 56
    DIVOP   shift, and go to state 57
    AND     shift, and go to state 58
    OR      shift, and go to state 59
    XOR     shift, and go to state 60
    NOT_EQ  shift, and go to state 61
    EQ      shift, and go to state 62
    LT      shift, and go to state 63
    GT      shift, and go to state 64
    LEQ     shift, and go to state 65
    GEQ     shift, and go to state 66

    $default  reduce using rule 19 (assign)

    binop  go to state 67


state 74

   20 print: PRINT LPAREN id RPAREN .

    $default  reduce using rule 20 (print)


state 75

   30 expr: LPAREN expr RPAREN .

    $default  reduce using rule 30 (expr)


state 76

   25 expr: expr . binop expr
   25     | expr binop expr .

    ADDOP   shift, and go to state 54
    SUBOP   shift, and go to state 55
    MULOP   shift, and go to state 56
    DIVOP   shift, and go to state 57
    AND     shift, and go to state 58
    OR      shift, and go to state 59
    XOR     shift, and go to state 60
    NOT_EQ  shift, and go to state 61
    EQ      shift, and go to state 62
    LT      shift, and go to state 63
    GT      shift, and go to state 64
    LEQ     shift, and go to state 65
    GEQ     shift, and go to state 66

    ADDOP     [reduce using rule 25 (expr)]
    SUBOP     [reduce using rule 25 (expr)]
    MULOP     [reduce using rule 25 (expr)]
    DIVOP     [reduce using rule 25 (expr)]
    AND       [reduce using rule 25 (expr)]
    OR        [reduce using rule 25 (expr)]
    XOR       [reduce using rule 25 (expr)]
    NOT_EQ    [reduce using rule 25 (expr)]
    EQ        [reduce using rule 25 (expr)]
    LT        [reduce using rule 25 (expr)]
    GT        [reduce using rule 25 (expr)]
    LEQ       [reduce using rule 25 (expr)]
    GEQ       [reduce using rule 25 (expr)]
    $default  reduce using rule 25 (expr)

    binop  go to state 67


state 77

   25 expr: expr . binop expr
   33 someArgs: expr . moreArgs

    ADDOP   shift, and go to state 54
    SUBOP   shift, and go to state 55
    MULOP   shift, and go to state 56
    DIVOP   shift, and go to state 57
    COMMA   shift, and go to state 83
    AND     shift, and go to state 58
    OR      shift, and go to state 59
    XOR     shift, and go to state 60
    NOT_EQ  shift, and go to state 61
    EQ      shift, and go to state 62
    LT      shift, and go to state 63
    GT      shift, and go to state 64
    LEQ     shift, and go to state 65
    GEQ     shift, and go to state 66

    $default  reduce using rule 35 (moreArgs)

    moreArgs  go to state 84
    binop     go to state 67


state 78

   27 expr: id LPAREN args . RPAREN

    RPAREN  shift, and go to state 85


state 79

   31 args: someArgs .

    $default  reduce using rule 31 (args)


state 80

   24 for: FOR LPAREN stmt SEMI . expr SEMI stmt RPAREN DO stmts END

    ID      shift, and go to state 18
    ICONST  shift, and go to state 37
    BCONST  shift, and go to state 38
    NOTOP   shift, and go to state 39
    LPAREN  shift, and go to state 40

    expr   go to state 86
    id     go to state 42
    const  go to state 43


state 81

   21 while: WHILE LPAREN expr RPAREN . DO stmts END

    DO  shift, and go to state 87


state 82

   22 if: IF LPAREN expr RPAREN . DO stmts END
   23   | IF LPAREN expr RPAREN . DO stmts ELSE stmts END

    DO  shift, and go to state 88


state 83

   34 moreArgs: COMMA . someArgs

    ID      shift, and go to state 18
    ICONST  shift, and go to state 37
    BCONST  shift, and go to state 38
    NOTOP   shift, and go to state 39
    LPAREN  shift, and go to state 40

    expr      go to state 77
    someArgs  go to state 89
    id        go to state 42
    const     go to state 43


state 84

   33 someArgs: expr moreArgs .

    $default  reduce using rule 33 (someArgs)


state 85

   27 expr: id LPAREN args RPAREN .

    $default  reduce using rule 27 (expr)


state 86

   24 for: FOR LPAREN stmt SEMI expr . SEMI stmt RPAREN DO stmts END
   25 expr: expr . binop expr

    ADDOP   shift, and go to state 54
    SUBOP   shift, and go to state 55
    MULOP   shift, and go to state 56
    DIVOP   shift, and go to state 57
    SEMI    shift, and go to state 90
    AND     shift, and go to state 58
    OR      shift, and go to state 59
    XOR     shift, and go to state 60
    NOT_EQ  shift, and go to state 61
    EQ      shift, and go to state 62
    LT      shift, and go to state 63
    GT      shift, and go to state 64
    LEQ     shift, and go to state 65
    GEQ     shift, and go to state 66

    binop  go to state 67


state 87

   21 while: WHILE LPAREN expr RPAREN DO . stmts END

    ID      shift, and go to state 18
    PRINT   shift, and go to state 19
    RETURN  shift, and go to state 20
    FOR     shift, and go to state 21
    WHILE   shift, and go to state 22
    IF      shift, and go to state 23

    stmts   go to state 91
    stmt    go to state 25
    assign  go to state 26
    print   go to state 27
    while   go to state 28
    if      go to state 29
    for     go to state 30
    return  go to state 31
    id      go to state 32


state 88

   22 if: IF LPAREN expr RPAREN DO . stmts END
   23   | IF LPAREN expr RPAREN DO . stmts ELSE stmts END

    ID      shift, and go to state 18
    PRINT   shift, and go to state 19
    RETURN  shift, and go to state 20
    FOR     shift, and go to state 21
    WHILE   shift, and go to state 22
    IF      shift, and go to state 23

    stmts   go to state 92
    stmt    go to state 25
    assign  go to state 26
    print   go to state 27
    while   go to state 28
    if      go to state 29
    for     go to state 30
    return  go to state 31
    id      go to state 32


state 89

   34 moreArgs: COMMA someArgs .

    $default  reduce using rule 34 (moreArgs)


state 90

   24 for: FOR LPAREN stmt SEMI expr SEMI . stmt RPAREN DO stmts END

    ID      shift, and go to state 18
    PRINT   shift, and go to state 19
    RETURN  shift, and go to state 20
    FOR     shift, and go to state 21
    WHILE   shift, and go to state 22
    IF      shift, and go to state 23

    stmt    go to state 93
    assign  go to state 26
    print   go to state 27
    while   go to state 28
    if      go to state 29
    for     go to state 30
    return  go to state 31
    id      go to state 32


state 91

   21 while: WHILE LPAREN expr RPAREN DO stmts . END

    END  shift, and go to state 94


state 92

   22 if: IF LPAREN expr RPAREN DO stmts . END
   23   | IF LPAREN expr RPAREN DO stmts . ELSE stmts END

    END   shift, and go to state 95
    ELSE  shift, and go to state 96


state 93

   24 for: FOR LPAREN stmt SEMI expr SEMI stmt . RPAREN DO stmts END

    RPAREN  shift, and go to state 97


state 94

   21 while: WHILE LPAREN expr RPAREN DO stmts END .

    $default  reduce using rule 21 (while)


state 95

   22 if: IF LPAREN expr RPAREN DO stmts END .

    $default  reduce using rule 22 (if)


state 96

   23 if: IF LPAREN expr RPAREN DO stmts ELSE . stmts END

    ID      shift, and go to state 18
    PRINT   shift, and go to state 19
    RETURN  shift, and go to state 20
    FOR     shift, and go to state 21
    WHILE   shift, and go to state 22
    IF      shift, and go to state 23

    stmts   go to state 98
    stmt    go to state 25
    assign  go to state 26
    print   go to state 27
    while   go to state 28
    if      go to state 29
    for     go to state 30
    return  go to state 31
    id      go to state 32


state 97

   24 for: FOR LPAREN stmt SEMI expr SEMI stmt RPAREN . DO stmts END

    DO  shift, and go to state 99


state 98

   23 if: IF LPAREN expr RPAREN DO stmts ELSE stmts . END

    END  shift, and go to state 100


state 99

   24 for: FOR LPAREN stmt SEMI expr SEMI stmt RPAREN DO . stmts END

    ID      shift, and go to state 18
    PRINT   shift, and go to state 19
    RETURN  shift, and go to state 20
    FOR     shift, and go to state 21
    WHILE   shift, and go to state 22
    IF      shift, and go to state 23

    stmts   go to state 101
    stmt    go to state 25
    assign  go to state 26
    print   go to state 27
    while   go to state 28
    if      go to state 29
    for     go to state 30
    return  go to state 31
    id      go to state 32


state 100

   23 if: IF LPAREN expr RPAREN DO stmts ELSE stmts END .

    $default  reduce using rule 23 (if)


state 101

   24 for: FOR LPAREN stmt SEMI expr SEMI stmt RPAREN DO stmts . END

    END  shift, and go to state 102


state 102

   24 for: FOR LPAREN stmt SEMI expr SEMI stmt RPAREN DO stmts END .

    $default  reduce using rule 24 (for)
