Terminals which are not used

   COLON


State 68 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: main

    2 main: FUNC_DECL MAIN vardecls stmts END

    3 vardecls: vardecl SEMI vardecls
    4         | /* empty */

    5 vardecl: type id

    6 type: INT
    7     | BOOL

    8 stmts: stmt SEMI stmts
    9      | stmt SEMI

   10 stmt: assign
   11     | print
   12     | while
   13     | if
   14     | for
   15     | return

   16 assign: id ASSIGN expr

   17 print: PRINT LPAREN id RPAREN

   18 while: WHILE LPAREN expr RPAREN DO stmts END

   19 if: IF LPAREN expr RPAREN DO stmts END
   20   | IF LPAREN expr RPAREN DO stmts ELSE stmts END

   21 for: FOR LPAREN stmt SEMI expr SEMI stmt RPAREN DO stmts END

   22 expr: expr binop expr
   23     | NOTOP expr
   24     | id LPAREN args RPAREN
   25     | id
   26     | const
   27     | LPAREN expr RPAREN

   28 args: someArgs
   29     | /* empty */

   30 someArgs: expr moreArgs

   31 moreArgs: COMMA someArgs
   32         | /* empty */

   33 return: RETURN expr

   34 id: ID

   35 const: ICONST
   36      | BCONST

   37 binop: ADDOP
   38      | SUBOP
   39      | MULOP
   40      | DIVOP
   41      | AND
   42      | OR
   43      | XOR
   44      | NOT_EQ
   45      | EQ
   46      | LT
   47      | GT
   48      | LEQ
   49      | GEQ


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 34
ICONST (259) 35
BCONST (260) 36
INT (261) 6
BOOL (262) 7
MAIN (263) 2
NOTOP (264) 23
ADDOP (265) 37
SUBOP (266) 38
MULOP (267) 39
DIVOP (268) 40
LPAREN (269) 17 18 19 20 21 24 27
RPAREN (270) 17 18 19 20 21 24 27
ASSIGN (271) 16
SEMI (272) 3 8 9 21
COLON (273)
FUNC_DECL (274) 2
END (275) 2 18 19 20 21
PRINT (276) 17
COMMA (277) 31
RETURN (278) 33
FOR (279) 21
WHILE (280) 18
IF (281) 19 20
ELSE (282) 20
DO (283) 18 19 20 21
AND (284) 41
OR (285) 42
XOR (286) 43
GEQ (287) 49
LEQ (288) 48
GT (289) 47
LT (290) 46
EQ (291) 45
NOT_EQ (292) 44


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1, on right: 0
main (40)
    on left: 2, on right: 1
vardecls (41)
    on left: 3 4, on right: 2 3
vardecl (42)
    on left: 5, on right: 3
type (43)
    on left: 6 7, on right: 5
stmts (44)
    on left: 8 9, on right: 2 8 18 19 20 21
stmt (45)
    on left: 10 11 12 13 14 15, on right: 8 9 21
assign (46)
    on left: 16, on right: 10
print (47)
    on left: 17, on right: 11
while (48)
    on left: 18, on right: 12
if (49)
    on left: 19 20, on right: 13
for (50)
    on left: 21, on right: 14
expr (51)
    on left: 22 23 24 25 26 27, on right: 16 18 19 20 21 22 23 27 30
    33
args (52)
    on left: 28 29, on right: 24
someArgs (53)
    on left: 30, on right: 28 31
moreArgs (54)
    on left: 31 32, on right: 30
return (55)
    on left: 33, on right: 15
id (56)
    on left: 34, on right: 5 16 17 24 25
const (57)
    on left: 35 36, on right: 26
binop (58)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48 49,
    on right: 22


state 0

    0 $accept: . program $end

    FUNC_DECL  shift, and go to state 1

    program  go to state 2
    main     go to state 3


state 1

    2 main: FUNC_DECL . MAIN vardecls stmts END

    MAIN  shift, and go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    1 program: main .

    $default  reduce using rule 1 (program)


state 4

    2 main: FUNC_DECL MAIN . vardecls stmts END

    INT   shift, and go to state 6
    BOOL  shift, and go to state 7

    $default  reduce using rule 4 (vardecls)

    vardecls  go to state 8
    vardecl   go to state 9
    type      go to state 10


state 5

    0 $accept: program $end .

    $default  accept


state 6

    6 type: INT .

    $default  reduce using rule 6 (type)


state 7

    7 type: BOOL .

    $default  reduce using rule 7 (type)


state 8

    2 main: FUNC_DECL MAIN vardecls . stmts END

    ID      shift, and go to state 11
    PRINT   shift, and go to state 12
    RETURN  shift, and go to state 13
    FOR     shift, and go to state 14
    WHILE   shift, and go to state 15
    IF      shift, and go to state 16

    stmts   go to state 17
    stmt    go to state 18
    assign  go to state 19
    print   go to state 20
    while   go to state 21
    if      go to state 22
    for     go to state 23
    return  go to state 24
    id      go to state 25


state 9

    3 vardecls: vardecl . SEMI vardecls

    SEMI  shift, and go to state 26


state 10

    5 vardecl: type . id

    ID  shift, and go to state 11

    id  go to state 27


state 11

   34 id: ID .

    $default  reduce using rule 34 (id)


state 12

   17 print: PRINT . LPAREN id RPAREN

    LPAREN  shift, and go to state 28


state 13

   33 return: RETURN . expr

    ID      shift, and go to state 11
    ICONST  shift, and go to state 29
    BCONST  shift, and go to state 30
    NOTOP   shift, and go to state 31
    LPAREN  shift, and go to state 32

    expr   go to state 33
    id     go to state 34
    const  go to state 35


state 14

   21 for: FOR . LPAREN stmt SEMI expr SEMI stmt RPAREN DO stmts END

    LPAREN  shift, and go to state 36


state 15

   18 while: WHILE . LPAREN expr RPAREN DO stmts END

    LPAREN  shift, and go to state 37


state 16

   19 if: IF . LPAREN expr RPAREN DO stmts END
   20   | IF . LPAREN expr RPAREN DO stmts ELSE stmts END

    LPAREN  shift, and go to state 38


state 17

    2 main: FUNC_DECL MAIN vardecls stmts . END

    END  shift, and go to state 39


state 18

    8 stmts: stmt . SEMI stmts
    9      | stmt . SEMI

    SEMI  shift, and go to state 40


state 19

   10 stmt: assign .

    $default  reduce using rule 10 (stmt)


state 20

   11 stmt: print .

    $default  reduce using rule 11 (stmt)


state 21

   12 stmt: while .

    $default  reduce using rule 12 (stmt)


state 22

   13 stmt: if .

    $default  reduce using rule 13 (stmt)


state 23

   14 stmt: for .

    $default  reduce using rule 14 (stmt)


state 24

   15 stmt: return .

    $default  reduce using rule 15 (stmt)


state 25

   16 assign: id . ASSIGN expr

    ASSIGN  shift, and go to state 41


state 26

    3 vardecls: vardecl SEMI . vardecls

    INT   shift, and go to state 6
    BOOL  shift, and go to state 7

    $default  reduce using rule 4 (vardecls)

    vardecls  go to state 42
    vardecl   go to state 9
    type      go to state 10


state 27

    5 vardecl: type id .

    $default  reduce using rule 5 (vardecl)


state 28

   17 print: PRINT LPAREN . id RPAREN

    ID  shift, and go to state 11

    id  go to state 43


state 29

   35 const: ICONST .

    $default  reduce using rule 35 (const)


state 30

   36 const: BCONST .

    $default  reduce using rule 36 (const)


state 31

   23 expr: NOTOP . expr

    ID      shift, and go to state 11
    ICONST  shift, and go to state 29
    BCONST  shift, and go to state 30
    NOTOP   shift, and go to state 31
    LPAREN  shift, and go to state 32

    expr   go to state 44
    id     go to state 34
    const  go to state 35


state 32

   27 expr: LPAREN . expr RPAREN

    ID      shift, and go to state 11
    ICONST  shift, and go to state 29
    BCONST  shift, and go to state 30
    NOTOP   shift, and go to state 31
    LPAREN  shift, and go to state 32

    expr   go to state 45
    id     go to state 34
    const  go to state 35


state 33

   22 expr: expr . binop expr
   33 return: RETURN expr .

    ADDOP   shift, and go to state 46
    SUBOP   shift, and go to state 47
    MULOP   shift, and go to state 48
    DIVOP   shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    XOR     shift, and go to state 52
    GEQ     shift, and go to state 53
    LEQ     shift, and go to state 54
    GT      shift, and go to state 55
    LT      shift, and go to state 56
    EQ      shift, and go to state 57
    NOT_EQ  shift, and go to state 58

    $default  reduce using rule 33 (return)

    binop  go to state 59


state 34

   24 expr: id . LPAREN args RPAREN
   25     | id .

    LPAREN  shift, and go to state 60

    $default  reduce using rule 25 (expr)


state 35

   26 expr: const .

    $default  reduce using rule 26 (expr)


state 36

   21 for: FOR LPAREN . stmt SEMI expr SEMI stmt RPAREN DO stmts END

    ID      shift, and go to state 11
    PRINT   shift, and go to state 12
    RETURN  shift, and go to state 13
    FOR     shift, and go to state 14
    WHILE   shift, and go to state 15
    IF      shift, and go to state 16

    stmt    go to state 61
    assign  go to state 19
    print   go to state 20
    while   go to state 21
    if      go to state 22
    for     go to state 23
    return  go to state 24
    id      go to state 25


state 37

   18 while: WHILE LPAREN . expr RPAREN DO stmts END

    ID      shift, and go to state 11
    ICONST  shift, and go to state 29
    BCONST  shift, and go to state 30
    NOTOP   shift, and go to state 31
    LPAREN  shift, and go to state 32

    expr   go to state 62
    id     go to state 34
    const  go to state 35


state 38

   19 if: IF LPAREN . expr RPAREN DO stmts END
   20   | IF LPAREN . expr RPAREN DO stmts ELSE stmts END

    ID      shift, and go to state 11
    ICONST  shift, and go to state 29
    BCONST  shift, and go to state 30
    NOTOP   shift, and go to state 31
    LPAREN  shift, and go to state 32

    expr   go to state 63
    id     go to state 34
    const  go to state 35


state 39

    2 main: FUNC_DECL MAIN vardecls stmts END .

    $default  reduce using rule 2 (main)


state 40

    8 stmts: stmt SEMI . stmts
    9      | stmt SEMI .

    ID      shift, and go to state 11
    PRINT   shift, and go to state 12
    RETURN  shift, and go to state 13
    FOR     shift, and go to state 14
    WHILE   shift, and go to state 15
    IF      shift, and go to state 16

    $default  reduce using rule 9 (stmts)

    stmts   go to state 64
    stmt    go to state 18
    assign  go to state 19
    print   go to state 20
    while   go to state 21
    if      go to state 22
    for     go to state 23
    return  go to state 24
    id      go to state 25


state 41

   16 assign: id ASSIGN . expr

    ID      shift, and go to state 11
    ICONST  shift, and go to state 29
    BCONST  shift, and go to state 30
    NOTOP   shift, and go to state 31
    LPAREN  shift, and go to state 32

    expr   go to state 65
    id     go to state 34
    const  go to state 35


state 42

    3 vardecls: vardecl SEMI vardecls .

    $default  reduce using rule 3 (vardecls)


state 43

   17 print: PRINT LPAREN id . RPAREN

    RPAREN  shift, and go to state 66


state 44

   22 expr: expr . binop expr
   23     | NOTOP expr .

    ADDOP   shift, and go to state 46
    SUBOP   shift, and go to state 47
    MULOP   shift, and go to state 48
    DIVOP   shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    XOR     shift, and go to state 52
    GEQ     shift, and go to state 53
    LEQ     shift, and go to state 54
    GT      shift, and go to state 55
    LT      shift, and go to state 56
    EQ      shift, and go to state 57
    NOT_EQ  shift, and go to state 58

    $default  reduce using rule 23 (expr)

    binop  go to state 59


state 45

   22 expr: expr . binop expr
   27     | LPAREN expr . RPAREN

    ADDOP   shift, and go to state 46
    SUBOP   shift, and go to state 47
    MULOP   shift, and go to state 48
    DIVOP   shift, and go to state 49
    RPAREN  shift, and go to state 67
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    XOR     shift, and go to state 52
    GEQ     shift, and go to state 53
    LEQ     shift, and go to state 54
    GT      shift, and go to state 55
    LT      shift, and go to state 56
    EQ      shift, and go to state 57
    NOT_EQ  shift, and go to state 58

    binop  go to state 59


state 46

   37 binop: ADDOP .

    $default  reduce using rule 37 (binop)


state 47

   38 binop: SUBOP .

    $default  reduce using rule 38 (binop)


state 48

   39 binop: MULOP .

    $default  reduce using rule 39 (binop)


state 49

   40 binop: DIVOP .

    $default  reduce using rule 40 (binop)


state 50

   41 binop: AND .

    $default  reduce using rule 41 (binop)


state 51

   42 binop: OR .

    $default  reduce using rule 42 (binop)


state 52

   43 binop: XOR .

    $default  reduce using rule 43 (binop)


state 53

   49 binop: GEQ .

    $default  reduce using rule 49 (binop)


state 54

   48 binop: LEQ .

    $default  reduce using rule 48 (binop)


state 55

   47 binop: GT .

    $default  reduce using rule 47 (binop)


state 56

   46 binop: LT .

    $default  reduce using rule 46 (binop)


state 57

   45 binop: EQ .

    $default  reduce using rule 45 (binop)


state 58

   44 binop: NOT_EQ .

    $default  reduce using rule 44 (binop)


state 59

   22 expr: expr binop . expr

    ID      shift, and go to state 11
    ICONST  shift, and go to state 29
    BCONST  shift, and go to state 30
    NOTOP   shift, and go to state 31
    LPAREN  shift, and go to state 32

    expr   go to state 68
    id     go to state 34
    const  go to state 35


state 60

   24 expr: id LPAREN . args RPAREN

    ID      shift, and go to state 11
    ICONST  shift, and go to state 29
    BCONST  shift, and go to state 30
    NOTOP   shift, and go to state 31
    LPAREN  shift, and go to state 32

    $default  reduce using rule 29 (args)

    expr      go to state 69
    args      go to state 70
    someArgs  go to state 71
    id        go to state 34
    const     go to state 35


state 61

   21 for: FOR LPAREN stmt . SEMI expr SEMI stmt RPAREN DO stmts END

    SEMI  shift, and go to state 72


state 62

   18 while: WHILE LPAREN expr . RPAREN DO stmts END
   22 expr: expr . binop expr

    ADDOP   shift, and go to state 46
    SUBOP   shift, and go to state 47
    MULOP   shift, and go to state 48
    DIVOP   shift, and go to state 49
    RPAREN  shift, and go to state 73
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    XOR     shift, and go to state 52
    GEQ     shift, and go to state 53
    LEQ     shift, and go to state 54
    GT      shift, and go to state 55
    LT      shift, and go to state 56
    EQ      shift, and go to state 57
    NOT_EQ  shift, and go to state 58

    binop  go to state 59


state 63

   19 if: IF LPAREN expr . RPAREN DO stmts END
   20   | IF LPAREN expr . RPAREN DO stmts ELSE stmts END
   22 expr: expr . binop expr

    ADDOP   shift, and go to state 46
    SUBOP   shift, and go to state 47
    MULOP   shift, and go to state 48
    DIVOP   shift, and go to state 49
    RPAREN  shift, and go to state 74
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    XOR     shift, and go to state 52
    GEQ     shift, and go to state 53
    LEQ     shift, and go to state 54
    GT      shift, and go to state 55
    LT      shift, and go to state 56
    EQ      shift, and go to state 57
    NOT_EQ  shift, and go to state 58

    binop  go to state 59


state 64

    8 stmts: stmt SEMI stmts .

    $default  reduce using rule 8 (stmts)


state 65

   16 assign: id ASSIGN expr .
   22 expr: expr . binop expr

    ADDOP   shift, and go to state 46
    SUBOP   shift, and go to state 47
    MULOP   shift, and go to state 48
    DIVOP   shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    XOR     shift, and go to state 52
    GEQ     shift, and go to state 53
    LEQ     shift, and go to state 54
    GT      shift, and go to state 55
    LT      shift, and go to state 56
    EQ      shift, and go to state 57
    NOT_EQ  shift, and go to state 58

    $default  reduce using rule 16 (assign)

    binop  go to state 59


state 66

   17 print: PRINT LPAREN id RPAREN .

    $default  reduce using rule 17 (print)


state 67

   27 expr: LPAREN expr RPAREN .

    $default  reduce using rule 27 (expr)


state 68

   22 expr: expr . binop expr
   22     | expr binop expr .

    ADDOP   shift, and go to state 46
    SUBOP   shift, and go to state 47
    MULOP   shift, and go to state 48
    DIVOP   shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    XOR     shift, and go to state 52
    GEQ     shift, and go to state 53
    LEQ     shift, and go to state 54
    GT      shift, and go to state 55
    LT      shift, and go to state 56
    EQ      shift, and go to state 57
    NOT_EQ  shift, and go to state 58

    ADDOP     [reduce using rule 22 (expr)]
    SUBOP     [reduce using rule 22 (expr)]
    MULOP     [reduce using rule 22 (expr)]
    DIVOP     [reduce using rule 22 (expr)]
    AND       [reduce using rule 22 (expr)]
    OR        [reduce using rule 22 (expr)]
    XOR       [reduce using rule 22 (expr)]
    GEQ       [reduce using rule 22 (expr)]
    LEQ       [reduce using rule 22 (expr)]
    GT        [reduce using rule 22 (expr)]
    LT        [reduce using rule 22 (expr)]
    EQ        [reduce using rule 22 (expr)]
    NOT_EQ    [reduce using rule 22 (expr)]
    $default  reduce using rule 22 (expr)

    binop  go to state 59


state 69

   22 expr: expr . binop expr
   30 someArgs: expr . moreArgs

    ADDOP   shift, and go to state 46
    SUBOP   shift, and go to state 47
    MULOP   shift, and go to state 48
    DIVOP   shift, and go to state 49
    COMMA   shift, and go to state 75
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    XOR     shift, and go to state 52
    GEQ     shift, and go to state 53
    LEQ     shift, and go to state 54
    GT      shift, and go to state 55
    LT      shift, and go to state 56
    EQ      shift, and go to state 57
    NOT_EQ  shift, and go to state 58

    $default  reduce using rule 32 (moreArgs)

    moreArgs  go to state 76
    binop     go to state 59


state 70

   24 expr: id LPAREN args . RPAREN

    RPAREN  shift, and go to state 77


state 71

   28 args: someArgs .

    $default  reduce using rule 28 (args)


state 72

   21 for: FOR LPAREN stmt SEMI . expr SEMI stmt RPAREN DO stmts END

    ID      shift, and go to state 11
    ICONST  shift, and go to state 29
    BCONST  shift, and go to state 30
    NOTOP   shift, and go to state 31
    LPAREN  shift, and go to state 32

    expr   go to state 78
    id     go to state 34
    const  go to state 35


state 73

   18 while: WHILE LPAREN expr RPAREN . DO stmts END

    DO  shift, and go to state 79


state 74

   19 if: IF LPAREN expr RPAREN . DO stmts END
   20   | IF LPAREN expr RPAREN . DO stmts ELSE stmts END

    DO  shift, and go to state 80


state 75

   31 moreArgs: COMMA . someArgs

    ID      shift, and go to state 11
    ICONST  shift, and go to state 29
    BCONST  shift, and go to state 30
    NOTOP   shift, and go to state 31
    LPAREN  shift, and go to state 32

    expr      go to state 69
    someArgs  go to state 81
    id        go to state 34
    const     go to state 35


state 76

   30 someArgs: expr moreArgs .

    $default  reduce using rule 30 (someArgs)


state 77

   24 expr: id LPAREN args RPAREN .

    $default  reduce using rule 24 (expr)


state 78

   21 for: FOR LPAREN stmt SEMI expr . SEMI stmt RPAREN DO stmts END
   22 expr: expr . binop expr

    ADDOP   shift, and go to state 46
    SUBOP   shift, and go to state 47
    MULOP   shift, and go to state 48
    DIVOP   shift, and go to state 49
    SEMI    shift, and go to state 82
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    XOR     shift, and go to state 52
    GEQ     shift, and go to state 53
    LEQ     shift, and go to state 54
    GT      shift, and go to state 55
    LT      shift, and go to state 56
    EQ      shift, and go to state 57
    NOT_EQ  shift, and go to state 58

    binop  go to state 59


state 79

   18 while: WHILE LPAREN expr RPAREN DO . stmts END

    ID      shift, and go to state 11
    PRINT   shift, and go to state 12
    RETURN  shift, and go to state 13
    FOR     shift, and go to state 14
    WHILE   shift, and go to state 15
    IF      shift, and go to state 16

    stmts   go to state 83
    stmt    go to state 18
    assign  go to state 19
    print   go to state 20
    while   go to state 21
    if      go to state 22
    for     go to state 23
    return  go to state 24
    id      go to state 25


state 80

   19 if: IF LPAREN expr RPAREN DO . stmts END
   20   | IF LPAREN expr RPAREN DO . stmts ELSE stmts END

    ID      shift, and go to state 11
    PRINT   shift, and go to state 12
    RETURN  shift, and go to state 13
    FOR     shift, and go to state 14
    WHILE   shift, and go to state 15
    IF      shift, and go to state 16

    stmts   go to state 84
    stmt    go to state 18
    assign  go to state 19
    print   go to state 20
    while   go to state 21
    if      go to state 22
    for     go to state 23
    return  go to state 24
    id      go to state 25


state 81

   31 moreArgs: COMMA someArgs .

    $default  reduce using rule 31 (moreArgs)


state 82

   21 for: FOR LPAREN stmt SEMI expr SEMI . stmt RPAREN DO stmts END

    ID      shift, and go to state 11
    PRINT   shift, and go to state 12
    RETURN  shift, and go to state 13
    FOR     shift, and go to state 14
    WHILE   shift, and go to state 15
    IF      shift, and go to state 16

    stmt    go to state 85
    assign  go to state 19
    print   go to state 20
    while   go to state 21
    if      go to state 22
    for     go to state 23
    return  go to state 24
    id      go to state 25


state 83

   18 while: WHILE LPAREN expr RPAREN DO stmts . END

    END  shift, and go to state 86


state 84

   19 if: IF LPAREN expr RPAREN DO stmts . END
   20   | IF LPAREN expr RPAREN DO stmts . ELSE stmts END

    END   shift, and go to state 87
    ELSE  shift, and go to state 88


state 85

   21 for: FOR LPAREN stmt SEMI expr SEMI stmt . RPAREN DO stmts END

    RPAREN  shift, and go to state 89


state 86

   18 while: WHILE LPAREN expr RPAREN DO stmts END .

    $default  reduce using rule 18 (while)


state 87

   19 if: IF LPAREN expr RPAREN DO stmts END .

    $default  reduce using rule 19 (if)


state 88

   20 if: IF LPAREN expr RPAREN DO stmts ELSE . stmts END

    ID      shift, and go to state 11
    PRINT   shift, and go to state 12
    RETURN  shift, and go to state 13
    FOR     shift, and go to state 14
    WHILE   shift, and go to state 15
    IF      shift, and go to state 16

    stmts   go to state 90
    stmt    go to state 18
    assign  go to state 19
    print   go to state 20
    while   go to state 21
    if      go to state 22
    for     go to state 23
    return  go to state 24
    id      go to state 25


state 89

   21 for: FOR LPAREN stmt SEMI expr SEMI stmt RPAREN . DO stmts END

    DO  shift, and go to state 91


state 90

   20 if: IF LPAREN expr RPAREN DO stmts ELSE stmts . END

    END  shift, and go to state 92


state 91

   21 for: FOR LPAREN stmt SEMI expr SEMI stmt RPAREN DO . stmts END

    ID      shift, and go to state 11
    PRINT   shift, and go to state 12
    RETURN  shift, and go to state 13
    FOR     shift, and go to state 14
    WHILE   shift, and go to state 15
    IF      shift, and go to state 16

    stmts   go to state 93
    stmt    go to state 18
    assign  go to state 19
    print   go to state 20
    while   go to state 21
    if      go to state 22
    for     go to state 23
    return  go to state 24
    id      go to state 25


state 92

   20 if: IF LPAREN expr RPAREN DO stmts ELSE stmts END .

    $default  reduce using rule 20 (if)


state 93

   21 for: FOR LPAREN stmt SEMI expr SEMI stmt RPAREN DO stmts . END

    END  shift, and go to state 94


state 94

   21 for: FOR LPAREN stmt SEMI expr SEMI stmt RPAREN DO stmts END .

    $default  reduce using rule 21 (for)
